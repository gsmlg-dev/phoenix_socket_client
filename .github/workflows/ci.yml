name: CI

on:
  push:
    branches: [ '*' ]

jobs:
  compile:
    name: Compile
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18'
          otp-version: '28'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Compile with warnings as errors
        run: mix compile --warnings-as-errors

  format:
    name: Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18'
          otp-version: '28'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Check code formatting
        run: mix format --check-formatted

  credo:
    name: Credo
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18'
          otp-version: '28'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Run Credo strict
        run: mix credo --strict

  dialyzer:
    name: Dialyzer
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18'
          otp-version: '28'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Restore Dialyzer PLT cache
        uses: actions/cache@v4
        with:
          path: priv/plts
          key: ${{ runner.os }}-dialyzer-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-dialyzer-

      - name: Run Dialyzer
        run: mix dialyzer --halt-exit-status

  ci-success:
    name: All CI Checks Passed
    runs-on: ubuntu-latest
    if: always()
    needs: [compile, format, credo, dialyzer]

    steps:
      - name: Check all jobs succeeded
        run: |
          if [[ "${{ needs.compile.result }}" != "success" ]] || \
             [[ "${{ needs.format.result }}" != "success" ]] || \
             [[ "${{ needs.credo.result }}" != "success" ]] || \
             [[ "${{ needs.dialyzer.result }}" != "success" ]]; then
            echo "One or more CI checks failed:"
            echo "  - Compile: ${{ needs.compile.result }}"
            echo "  - Format: ${{ needs.format.result }}"
            echo "  - Credo: ${{ needs.credo.result }}"
            echo "  - Dialyzer: ${{ needs.dialyzer.result }}"
            exit 1
          fi
          echo "All CI checks passed successfully!"
